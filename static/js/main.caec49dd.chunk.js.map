{"version":3,"sources":["Context/SidebarToggle.js","Context/DisplayList.js","Components/NavBar/Navbar.js","Components/Body/Sidebar.js","Components/Body/CreateNewNote.js","Context/Notes.js","Components/Body/OpenModal.js","Components/Body/TransitionModal.js","Components/Body/DisplayNote.js","Components/Body/OpenCreateNewNote.js","Components/BlankPage/BlankPage.js","Components/Body/Notebody.js","Components/Body/Body.js","App.js","index.js"],"names":["SidebarToggleContext","createContext","SidebarToggleProvider","props","useState","sideToggle","setSideToggle","Provider","value","children","DisplayListContext","DisplayListProvider","displaylist","setDisplayList","Navbar","useContext","inputclose","setInputClose","search","setSearch","inputcolor","setInputColor","NavWrapper","colorsI","className","fontSize","color","onClick","Heading","InputWrapper","onFocus","e","onBlur","Input","onChange","target","RighWrapper","styled","div","h1","input","attrs","type","placeholder","Sidebar","SideWrapper","ItemWrapper","ItemLabel","label","CreateNewNote","setToogleNote","NewNoteWrapper","NewNoteHeader","NewNoteIcons","p","NotesContext","NotesProvider","notes","setNotes","OpenModal","id","title","note","setOpen","localtitle","setLocalTitle","localnote","setLocalNote","useEffect","temp","filter","console","log","newList","map","OpenModalWrapper","OpenModalTitle","InputField","OpenModalContent","autofocus","OpenModalIcons","OpenModalIconsLeft","OpenModalIconsRight","ModalCloseButton","textarea","a","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","border","boxShadow","shadows","background","borderRadius","TransitionsModal","open","classes","Modal","aria-labelledby","aria-describedby","onClose","stateModal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","DisplayNote","React","DisplayNoteWrapper","DisplayNoteTitle","DisplayText","DisplayNoteContent","DisplayNothing","DisplayNoteIcons","n","OpenCreateNewNote","Date","now","toString","localnotes","setLocalNotes","rows","autoFocus","NewNoteIconsLeft","NewNoteIconsRight","BlankPage","message","BlankWrapper","BlankIcon","htmlColor","BlankText","TextField","Notebody","togglenote","NoteWrapper","NoteCreateWrapper","length","NoteDisplayWrapper","WbIncandescentRoundedIcon","Body","BodyWrapper","App","Apps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.caec49dd.chunk.js","sourcesContent":["import React ,{ createContext, useState} from 'react'\r\n\r\nexport const SidebarToggleContext = createContext();\r\n\r\nexport const SidebarToggleProvider = (props)=> {\r\n    const [sideToggle,setSideToggle] = useState(false);\r\n    return (\r\n        <SidebarToggleContext.Provider value={ [sideToggle,setSideToggle]}>\r\n            {props.children}\r\n        </SidebarToggleContext.Provider>\r\n    );\r\n}\r\n","import React ,{ createContext, useState} from 'react'\r\n\r\nexport const DisplayListContext = createContext();\r\n\r\nexport const DisplayListProvider = (props)=> {\r\n    const [displaylist,setDisplayList] = useState(false);\r\n    return (\r\n        <DisplayListContext.Provider value={[displaylist,setDisplayList]}>\r\n            {props.children}\r\n        </DisplayListContext.Provider>\r\n    );\r\n}\r\n","import styled  from \"styled-components\";\r\nimport MenuSharpIcon from '@material-ui/icons/MenuSharp';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport ViewStreamOutlinedIcon from '@material-ui/icons/ViewStreamOutlined';\r\nimport { useState,useContext } from \"react\";\r\nimport {SidebarToggleContext} from '../../Context/SidebarToggle';\r\nimport {DisplayListContext} from '../../Context/DisplayList'\r\nimport ViewCompactOutlinedIcon from '@material-ui/icons/ViewCompactOutlined';\r\n\r\n\r\nexport default function Navbar() {\r\n\r\n    const [sideToggle,setSideToggle] = useContext(SidebarToggleContext);\r\n\r\n    const [inputclose,setInputClose] = useState(false);\r\n    const [search,setSearch] = useState('')\r\n    const [displaylist,setDisplayList] =  useContext(DisplayListContext);\r\n   \r\n    \r\n    const handleInputcloseV1 = () =>{\r\n        setSearch('')\r\n        setInputClose(!inputclose);\r\n        \r\n    }\r\n    const handleInputcloseV2 = () =>{\r\n        if(!inputclose)\r\n             setInputClose(true)\r\n    }\r\n\r\n    const [inputcolor,setInputColor] = useState(false);\r\n\r\n\r\n  return (\r\n      <NavWrapper  colorsI={inputcolor}>\r\n        <MenuSharpIcon className=\"menu\" fontSize=\"medium\" color=\"inherit\" onClick={()=>setSideToggle(!sideToggle)}/> \r\n        <Heading>Keep Notes</Heading>\r\n        <InputWrapper className=\"mobile\" inputclose={inputclose} onFocus={(e) => {setInputColor(true)}} onBlur={(e) => {setInputColor(false)}} colorsI={inputcolor}>\r\n            <SearchRoundedIcon colorsI={inputcolor} className=\"menu search-icon\"  />\r\n            <Input colorsI={inputcolor}  onClick={handleInputcloseV2} value={search} onChange={e=> setSearch(e.target.value)} />\r\n            <CloseIcon colorsI={inputcolor}   className=\"menu inputcloses search-icon\"  onClick={handleInputcloseV1}/>\r\n        </InputWrapper>\r\n        <RighWrapper>\r\n            <RefreshIcon className=\"menu\" fontSize=\"medium\" />\r\n            {!displaylist?\r\n            <ViewStreamOutlinedIcon onClick={()=>setDisplayList(!displaylist)} className=\"menu mobile\" fontSize=\"medium\"/>\r\n            :\r\n            <ViewCompactOutlinedIcon onClick={()=>setDisplayList(!displaylist)} className=\"menu mobile\" fontSize=\"medium\"/>\r\n            }\r\n            <SettingsIcon className=\"menu\" fontSize=\"medium\"/>\r\n            <AccountCircleRoundedIcon className=\"menu\" fontSize=\"medium\" />\r\n        </RighWrapper>\r\n      </NavWrapper>\r\n  );\r\n}\r\n\r\nconst NavWrapper = styled.div`\r\n        display:flex;\r\n        flex-direction:row;\r\n        justify-content:space-around;\r\n        align-items:center;\r\n        \r\n        height:65px;\r\n        position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n        background-color: #202124;\r\n        color:white;\r\n        z-index: 986;\r\n        -webkit-box-shadow: 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%), 0px 2px 4px -1px rgb(0 0 0 / 20%);\r\n        box-shadow: 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%), 0px 2px 4px -1px rgb(0 0 0 / 20%);\r\n       \r\n    .menu{\r\n        cursor:pointer;\r\n        padding:10px;\r\n       \r\n        border-radius:50%;\r\n       \r\n    }\r\n    .menu:hover{\r\n       \r\n        background:#2F3034;\r\n        \r\n    }\r\n    .menu:active{\r\n        opacity:0.7;\r\n    }\r\n    .search-icon{\r\n        margin:5px;\r\n       \r\n    }\r\n    .search-icon:hover{\r\n       \r\n            background:${(props)=>!props.colorsI ?\"#5E5E61\" : \"#F0F0F0\" };\r\n       \r\n        \r\n    }\r\n    @media (max-width: 940px)\r\n    {\r\n     .mobile{\r\n      display:none;   \r\n     }  \r\n    }\r\n    \r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  cursor:pointer;\r\n  opacity:0.9;\r\n  @media (max-width: 940px)\r\n  {\r\n   font-size: 25px;  \r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n       \r\n        display:flex;\r\n        flex-direction:row;\r\n        align-items:center;\r\n        min-width:45%;\r\n        padding-right:5px;\r\n       \r\n        border-radius:10px;\r\n        background-color: ${(props)=>!props.colorsI ? \"#525355\" : \"white\" };\r\n        color: ${(props)=>props.colorsI ? \"#525355\" : \"white\" };\r\n        .inputcloses{\r\n          \r\n            display : ${props => props.inputclose?\"inline\":\"none\"}\r\n           \r\n                \r\n        }\r\n        \r\n       \r\n       \r\n       \r\n`;\r\nconst Input = styled.input.attrs(props=>({\r\n            type: \"text\",\r\n            placeholder:\"Search\"\r\n        }))\r\n        `\r\n        width:80%;\r\n        font-size:18px;\r\n        padding:10px;\r\n      \r\n        border:none;\r\n        \r\n        background-color: ${(props)=>!props.colorsI ? \"#525355\" : \"white\" };\r\n        color: white;\r\n        font-weight:400;\r\n        &:focus{\r\n            outline:none;\r\n            background-color:white;\r\n            color:black;\r\n            font-weight:400;\r\n            width:100%;\r\n            \r\n        }\r\n        &::placeholder{\r\n            font-weight:700;\r\n            color:${(props)=>props.colorsI ? \"#525355\" : \"white\" };\r\n            opacity:0.7;\r\n        }\r\n        \r\n        `;\r\n\r\n\r\nconst RighWrapper = styled.div`\r\n        display:flex;\r\n        flex-direction:row;\r\n        align-items:center;\r\n        min-width:15%;\r\n        justify-content:space-around;\r\n        \r\n`;\r\n","import {useContext} from 'react'\r\nimport styled  from \"styled-components\";\r\nimport WbIncandescentOutlinedIcon from '@material-ui/icons/WbIncandescentOutlined';\r\nimport NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport {SidebarToggleContext} from '../../Context/SidebarToggle'\r\n\r\n\r\nexport default function Sidebar() {\r\n\r\n    const [sideToggle,setSideToggle] = useContext(SidebarToggleContext);\r\n\r\n   \r\n\r\n    return (\r\n        <SideWrapper sideToggle={sideToggle}>\r\n            <ItemWrapper className=\"items active\">\r\n                <WbIncandescentOutlinedIcon className=\"icons\"/>\r\n                <ItemLabel className=\"iconstitle\">Notes</ItemLabel>\r\n            </ItemWrapper>\r\n            <ItemWrapper className=\"items\">\r\n                <NotificationsOutlinedIcon  className=\"icons\"/>\r\n                <ItemLabel  className=\"iconstitle\">Reminder</ItemLabel>\r\n            </ItemWrapper>\r\n            <ItemWrapper className=\"items\">\r\n                <LabelOutlinedIcon  className=\"icons\"/>\r\n                <ItemLabel  className=\"iconstitle\">Label</ItemLabel>\r\n            </ItemWrapper>\r\n            <ItemWrapper className=\"items\">\r\n                <LabelOutlinedIcon  className=\"icons\"/>\r\n                <ItemLabel  className=\"iconstitle\">Label</ItemLabel>\r\n            </ItemWrapper>\r\n            <ItemWrapper className=\"items\">\r\n                <LabelOutlinedIcon  className=\"icons\"/>\r\n                <ItemLabel  className=\"iconstitle\">Label</ItemLabel>\r\n            </ItemWrapper>\r\n            <ItemWrapper className=\"items\">\r\n                <EditOutlinedIcon className=\"icons\" />\r\n                <ItemLabel  className=\"iconstitle\">Edit Label</ItemLabel>\r\n            </ItemWrapper>\r\n            <ItemWrapper className=\"items\">\r\n                <ArchiveOutlinedIcon  className=\"icons\"/>\r\n                <ItemLabel  className=\"iconstitle\">Archive</ItemLabel>\r\n            </ItemWrapper>\r\n            <ItemWrapper className=\"items\">\r\n                <DeleteOutlineOutlinedIcon  className=\"icons\"/>\r\n                <ItemLabel  className=\"iconstitle\">Trash</ItemLabel>\r\n            </ItemWrapper>\r\n        </SideWrapper>\r\n    )\r\n}\r\n\r\nconst SideWrapper = styled.div`\r\n    display:${props=>props.sideToggle?\"flex\":\"none\"};\r\n    // display:flex;\r\n    flex-direction:column;\r\n    margin-top:5px;\r\n    \r\n    min-width:310px;\r\n    transition: width 3s ease-in-out;\r\n    .icons{\r\n        opacity:0.7;\r\n    }\r\n    .items:hover{\r\n        background:#28292C;\r\n     }\r\n     .active{\r\n         background:#41331C;\r\n     }\r\n     .active:hover{\r\n        background:#41331C;\r\n    }\r\n    .iconstitle{\r\n        cursor: pointer;\r\n        \r\n    }\r\n    @media (max-width: 940px)\r\n        {\r\n            position:absolute;\r\n            z-index : 1;\r\n            .icons{\r\n                opacity:1;\r\n            }\r\n        }\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n    display:flex;\r\n    \r\n    flex-direction:row;\r\n    padding-left:45px;\r\n    padding-top:15px;\r\n    padding-bottom:15px;\r\n    width:260px;\r\n    background:#202124;\r\n    color:white;\r\n    border-radius:0px 30px 30px 0px;\r\n    cursor:pointer;\r\n    outline:none !important;\r\n    \r\n`;\r\n\r\n\r\nconst ItemLabel = styled.label`\r\n    \r\n    // display:${props=>props.sideToggle?\"inline-block\":\"none\"};\r\n    // display:none;\r\n    margin-left:25px;\r\n    font-weight:700;\r\n`;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styled  from \"styled-components\";\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\n\r\n\r\nexport default function CreateNewNote({setToogleNote}) {\r\n    return (\r\n        <NewNoteWrapper >\r\n            <NewNoteHeader  onClick={()=>setToogleNote(true)}>Take a note...</NewNoteHeader>\r\n            <NewNoteIcons>\r\n                <CheckBoxOutlinedIcon className=\"menu\"/>\r\n                <BrushIcon className=\"menu\"/>\r\n                <ImageOutlinedIcon className=\"menu\"/>\r\n            </NewNoteIcons>\r\n        </NewNoteWrapper>\r\n    )\r\n}\r\n\r\nconst NewNoteWrapper = styled.div`\r\n        display: flex;\r\n        \r\n        align-items:center;\r\n        color: white;\r\n        border: 1px solid rgba(255, 255, 255, .5);\r\n        box-shadow: 0px 2px 5px 2px rgba(0,0,0,0.75);\r\n        -webkit-box-shadow: 0px 2px 5px 2px rgba(0,0,0,0.75);\r\n        -moz-box-shadow: 0px 2px 5px 2px rgba(0,0,0,0.75);\r\n        width:600px;\r\n        height:46px;\r\n        opacity:0.7;\r\n        border-radius: 10px;\r\n        .menu{\r\n            // border: 1px solid white;\r\n            padding:10px;\r\n            border-radius:50%;\r\n            cursor:pointer;\r\n        }\r\n        .menu:hover{\r\n            background: #303236;\r\n        }\r\n       @media (max-width: 940px)\r\n       {\r\n           width : 360px;\r\n       }\r\n        \r\n`;\r\nconst NewNoteIcons = styled.div`\r\nflex:0.3;\r\n// border: 1px solid white;\r\ndisplay:flex;\r\njustify-content:space-around;\r\nalign-items:center;\r\nheight:100%;\r\n`;\r\n   \r\nconst NewNoteHeader = styled.p`\r\nflex:0.7;\r\n// border: 1px solid white;\r\ndisplay:flex;\r\nalign-items:center;\r\npadding-left:20px;\r\nheight:100%;\r\ncursor:text;\r\nopacity:0.5;\r\n`;\r\n   \r\n   ","import React ,{ createContext, useState} from 'react'\r\n\r\nexport const NotesContext = createContext();\r\n\r\nexport const NotesProvider = (props)=> {\r\n    const [notes,setNotes] = useState([\r\n                                        ]);\r\n    return (\r\n        <NotesContext.Provider value={ [notes,setNotes]}>\r\n            {props.children}\r\n        </NotesContext.Provider>\r\n    );\r\n}\r\n","import React,{useState,useContext,useEffect} from 'react'\r\nimport styled  from \"styled-components\";\r\nimport AddAlertOutlinedIcon from '@material-ui/icons/AddAlertOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined';\r\nimport {NotesContext} from '../../Context/Notes'\r\n\r\nexport default function OpenModal({id,title,note,setOpen}){\r\n\r\n    const [notes,setNotes] = useContext(NotesContext);\r\n\r\n    const [localtitle,setLocalTitle] = useState(title);\r\n    const [localnote,setLocalNote] = useState(note);\r\n\r\n   useEffect(() =>{\r\n    const temp = notes.filter(note=> note.id === id);\r\n    temp.title = localtitle\r\n    temp.note = localnote;\r\n    console.log(temp);\r\n\r\n    const newList = notes.map((note) => {\r\n        if (note.id === id) {\r\n          const updatednote = {\r\n            ...note,\r\n            title:localtitle,\r\n            note : localnote\r\n          };\r\n   \r\n          return updatednote;\r\n        }\r\n   \r\n        return note;\r\n      });\r\n   \r\n      setNotes(newList);\r\n   \r\n    console.log(notes);\r\n    \r\n\r\n   },[localtitle,localnote]);\r\n\r\n    return (\r\n        <OpenModalWrapper>\r\n            <OpenModalTitle>\r\n                <InputField  placeholder=\"Title\" className=\"title\" value={localtitle} onChange={(e)=>setLocalTitle(e.target.value)}/>\r\n            </OpenModalTitle>\r\n\r\n            <OpenModalContent>\r\n                <InputField   placeholder=\"note\"   autofocus=\"true\"   className=\"notes\" value={localnote} onChange={(e)=>setLocalNote(e.target.value)} />\r\n            </OpenModalContent>\r\n\r\n            <OpenModalIcons>\r\n                <OpenModalIconsLeft>\r\n                    <AddAlertOutlinedIcon className=\"menu\" fontSize=\"small\" />\r\n                    <PersonAddOutlinedIcon className=\"menu\" fontSize=\"small\"/>\r\n                    <ColorLensOutlinedIcon className=\"menu\" fontSize=\"small\"/>\r\n                    <ImageOutlinedIcon className=\"menu\"  fontSize=\"small\" />\r\n                    <ArchiveOutlinedIcon className=\"menu\" fontSize=\"small\"/>\r\n                    <MoreVertOutlinedIcon className=\"menu\" fontSize=\"small\"/>\r\n                </OpenModalIconsLeft>\r\n\r\n                <OpenModalIconsRight>\r\n                    <ModalCloseButton onClick={()=>setOpen(false)}>\r\n                        Close\r\n                    </ModalCloseButton>\r\n                </OpenModalIconsRight>\r\n\r\n            </OpenModalIcons>\r\n        </OpenModalWrapper>\r\n    )\r\n}\r\n\r\nconst OpenModalWrapper = styled.div`\r\nwidth: 600px;\r\nmax-height: 600px;\r\nbackground : #202124;\r\ncolor : white;\r\npadding : 10px 10px 0px 10px;\r\nborder-radius:10px;\r\n\r\n\r\n@media (max-width: 940px)\r\n{\r\n width:300px;\r\n max-height:400px;\r\n}\r\n\r\n`;\r\n\r\nconst OpenModalTitle = styled.div`\r\nmax-height: 100px;\r\nmargin-bottom:5px;\r\n@media (max-width: 940px)\r\n{\r\n    height: 60px;\r\n}\r\n`;\r\n\r\nconst OpenModalContent = styled.div`\r\nheight: 400px;\r\n// height:100%;\r\n// background:red;\r\n\r\n@media (max-width: 940px)\r\n{\r\n    height: 200px;\r\n}\r\n`;\r\n\r\nconst OpenModalIcons = styled.div`\r\ndisplay:flex;\r\nbackground:#202124;\r\nalign-items: center;\r\n\r\n// z-index:1;\r\n.menu{\r\n// border:1px solid black;\r\npadding:5px;\r\nborder-radius:50%;\r\n}\r\n.menu:hover{\r\ncursor:pointer;\r\nbackground:#2F3034;\r\n}\r\n.menu:active{\r\n    opacity:0.7;\r\n}\r\n`;\r\n\r\nconst OpenModalIconsLeft = styled.div`\r\nflex:0.6;\r\ndisplay:flex;\r\njustify-content: space-around;\r\nalign-items: center;\r\n// border: 1px solid black;\r\npadding :5px\r\n\r\n`;\r\n\r\nconst OpenModalIconsRight = styled.div`\r\nflex:0.4;\r\n\r\ndisplay:flex;\r\njustify-content:center;\r\n// border: 1px solid black;\r\npadding : 5px;\r\n`;\r\n\r\nconst InputField = styled.textarea`\r\n    width:100%;\r\n    background:#202124;\r\n    color : white;\r\n    font-size: 17px;\r\n    opacity:0.7;\r\n    font-weight:600;\r\n    border : none;\r\n    \r\n    overflow-wrap: break-word;\r\n    resize: none;\r\n    height : 100%;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        cursor:pointer;\r\n      }\r\n      \r\n    \r\n      &::-webkit-scrollbar-track {\r\n        background: #f1f1f1; \r\n      }\r\n       \r\n    \r\n      &::-webkit-scrollbar-thumb {\r\n        background: #888; \r\n      }\r\n      \r\n      \r\n      &::-webkit-scrollbar-thumb:hover {\r\n        background: #555; \r\n      }\r\n    &:focus{\r\n       \r\n        outline : none;\r\n    }\r\n\r\n    &.title\r\n    {\r\n        height : 100%;\r\n      \r\n       font-size: 25px;\r\n       opacity:1;\r\n       font-weight:500;\r\n    }\r\n    &.noted{\r\n       \r\n       \r\n       \r\n       \r\n    }\r\n    \r\n`;\r\n\r\nconst ModalCloseButton = styled.a`\r\nfont-weight: 400;\r\npadding:5px 15px 5px 15px;\r\n// border:1px solid black;\r\nbackground: #202124;\r\nborder-radius : 5px;\r\ncursor:pointer;\r\nuser-select: none;\r\n\r\n&:hover{\r\n    background:#2F3034;\r\n    opacity : 0.7;\r\n}\r\n&:active{\r\n    opacity : 1;\r\n}\r\n`;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport OpenModal from './OpenModal'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    \r\n  },\r\n  paper: {\r\n    // backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #fff',\r\n    boxShadow: theme.shadows[5],\r\n    background : '#202124',\r\n    borderRadius: '10px',\r\n    \r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal({open,setOpen,id,title,note}) {\r\n  const classes = useStyles();\r\n\r\n\r\n \r\n\r\n  const handleClose = ({stateModal}) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    \r\n      \r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <OpenModal id={id} title={title} note={note} setOpen={setOpen}/>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    \r\n  );\r\n}\r\n","import React,{useContext} from 'react'\r\nimport styled  from \"styled-components\";\r\nimport AddAlertOutlinedIcon from '@material-ui/icons/AddAlertOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined';\r\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\r\nimport TransitionsModal from './TransitionModal';\r\nimport {DisplayListContext} from '../../Context/DisplayList'\r\nimport {NotesContext} from '../../Context/Notes'\r\n\r\n\r\nexport default  function DisplayNote({id,title,note}) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [displaylist,setDisplayList] =  useContext(DisplayListContext);\r\n\r\n    const [notes,setNotes] = useContext(NotesContext);\r\n\r\n    const handleDeleteNote = ()=>{\r\n        setNotes([...notes.filter(n=> n.id != id)])\r\n    }\r\n\r\n    return (<>\r\n            \r\n       <DisplayNoteWrapper open={open} displaylist={displaylist}>\r\n           <CheckCircleSharpIcon className=\"tick-icon\"/>\r\n            {(title==note==\"\")?\r\n            <>\r\n           <DisplayNoteTitle onClick={()=>setOpen(true)}>\r\n                <DisplayText className=\"h2\">{title}</DisplayText>\r\n           </DisplayNoteTitle>\r\n           <DisplayNoteContent onClick={()=>setOpen(true)}>\r\n                <DisplayText>\r\n                {note}\r\n                </DisplayText>\r\n           </DisplayNoteContent>\r\n           </>\r\n                :\r\n           <DisplayNothing  onClick={()=>setOpen(true)}>\r\n               <DisplayText className=\"nothing\">Empty Note</DisplayText>\r\n           </DisplayNothing>\r\n           }\r\n           <DisplayNoteIcons className=\"icon-active\">\r\n                <AddAlertOutlinedIcon className=\"menu\"/>\r\n                <PersonAddOutlinedIcon className=\"menu\"/>\r\n                <ColorLensOutlinedIcon className=\"menu\"/>\r\n                <ImageOutlinedIcon className=\"menu\"/>\r\n                <ArchiveOutlinedIcon className=\"menu\"/>\r\n                <MoreVertOutlinedIcon onClick={handleDeleteNote}  className=\"menu\"/>\r\n                   \r\n           </DisplayNoteIcons>\r\n           \r\n       </DisplayNoteWrapper>\r\n            \r\n       <TransitionsModal open={open} setOpen={setOpen} id={id} title={title} note={note}/>\r\n           \r\n       </>\r\n    )\r\n}\r\n\r\n\r\nconst DisplayNoteWrapper = styled.div`\r\nmargin:10px;\r\ndisplay:flex;\r\nflex-direction:column;\r\nwidth:${props=>!props.displaylist?\"230px\":\"600px\"};\r\n\r\nborder: 1px solid white;\r\ncolor:white;\r\nborder-radius:10px;\r\nposition:relative;\r\nopacity:${props=> props.open?0:1};\r\n// max-height:300px;\r\n.menu{\r\n    cursor:pointer;\r\n    padding:5px;\r\n   \r\n    border-radius:50%;\r\n}\r\n.menu:hover{\r\n       \r\n    background:#2F3034;\r\n}\r\n.tick-icon{\r\n    position:absolute;\r\n    left:-13px;\r\n    top:-13px;\r\n    opacity: 0;\r\n}\r\n\r\n&:hover{\r\n    .icon-active{\r\n        opacity:0.7;\r\n        cursor:pointer;\r\n    }\r\n    .tick-icon{\r\n        opacity:1;\r\n        cursor:pointer;\r\n    }\r\n    box-shadow: 0px 2px 5px 2px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 0px 2px 5px 2px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 0px 2px 5px 2px rgba(0,0,0,0.75);\r\n}\r\n@media (max-width: 940px)\r\n{\r\n   width:360px;\r\n   .icon-active{\r\n    opacity:0.7;\r\n    cursor:pointer;\r\n}\r\n\r\n}\r\n\r\n\r\n`;\r\nconst DisplayNoteTitle = styled.div`\r\npadding:10px;\r\n\r\n`;\r\nconst DisplayNoteContent = styled.div`\r\npadding:10px;\r\nmax-height:300px;\r\noverflow:hidden;\r\n\r\n`;\r\nconst DisplayNoteIcons = styled.div`\r\ndisplay:flex;\r\nopacity : 0;\r\njustify-content :space-around;\r\npadding-top:20px;\r\npadding-bottom:10px;\r\ntrancition : 3s ease;\r\n\r\n\r\n// &:hover{\r\n//     opacity: 0.7;\r\n//     cursor:pointer;\r\n\r\n    \r\n// }\r\n\r\n`;\r\nconst DisplayText = styled.p`\r\n &.h2{\r\n    font-weight:700;\r\n}\r\n&.h4{\r\n    font-weight:400;\r\n}\r\n&.nothing{\r\n    font-size:30px;\r\n}\r\n`;\r\n\r\nconst DisplayNothing = styled.div`\r\n// background:red;\r\npadding-top: 10px;\r\ntext-align:center;\r\nopacity: 0.5;\r\n// height : 50%;\r\n`;","import React ,{useContext,useState} from 'react'\r\nimport styled  from \"styled-components\";\r\nimport AddAlertOutlinedIcon from '@material-ui/icons/AddAlertOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined';\r\nimport {NotesContext} from '../../Context/Notes'\r\n\r\n\r\n\r\nexport default function OpenCreateNewNote({setToogleNote}) {\r\n\r\n    const [notes,setNotes] = useContext(NotesContext);\r\n\r\n    const [localnotes,setLocalNotes] = useState({id: Date.now().toString(),title:\"\",note:\"\"});\r\n\r\n    \r\n    const handleLocalNote = () =>{\r\n        if(localnotes.note != \"\" || localnotes.title != \"\"){\r\n            // setLocalNotes({...localnotes, id : Date.now().toString() })\r\n            setNotes([localnotes,...notes])\r\n            \r\n            setLocalNotes({id:\"\",title:\"\",note:\"\"})\r\n            console.log( Date.now().toString());\r\n        }\r\n        setToogleNote(false)\r\n    }\r\n\r\n    return (\r\n       <NewNoteWrapper >\r\n          \r\n            <OpenModalTitle>\r\n                <InputField value={localnotes.title} onChange={(e)=>setLocalNotes({...localnotes,title : e.target.value})} placeholder=\"Title\" rows=\"1\" className=\"title\"/>\r\n            </OpenModalTitle>\r\n\r\n            <OpenModalContent>\r\n                <InputField  value={localnotes.note} onChange={(e)=>setLocalNotes({...localnotes,note : e.target.value})} placeholder=\"Take a note...\"  rows=\"1\" className=\"content\"  autoFocus=\"true\"  />\r\n            </OpenModalContent>\r\n            <NewNoteIcons>\r\n                    <NewNoteIconsLeft>\r\n                        <AddAlertOutlinedIcon className=\"menu\" fontSize=\"small\" />\r\n                        <PersonAddOutlinedIcon className=\"menu\" fontSize=\"small\"/>\r\n                        <ColorLensOutlinedIcon className=\"menu\" fontSize=\"small\"/>\r\n                        <ImageOutlinedIcon className=\"menu\"  fontSize=\"small\" />\r\n                        <ArchiveOutlinedIcon className=\"menu\" fontSize=\"small\"/>\r\n                        <MoreVertOutlinedIcon className=\"menu\" fontSize=\"small\"/>\r\n                    </NewNoteIconsLeft>\r\n\r\n                    <NewNoteIconsRight>\r\n                        <ModalCloseButton onClick={handleLocalNote}>\r\n                            Close\r\n                        </ModalCloseButton>\r\n                    </NewNoteIconsRight>\r\n\r\n                </NewNoteIcons>\r\n       </NewNoteWrapper>\r\n    )\r\n}\r\n\r\n\r\nconst  NewNoteWrapper = styled.div`\r\nwidth:600px;\r\nheight : 120px;\r\nborder: 1px solid rgba(255, 255, 255, .5);\r\nbox-shadow: 0px 2px 5px 2px rgba(0,0,0,0.75);\r\n-webkit-box-shadow: 0px 2px 5px 2px rgba(0,0,0,0.75);\r\n-moz-box-shadow: 0px 2px 5px 2px rgba(0,0,0,0.75);\r\ncolor : white;\r\npadding: 10px 0px 0 0px;\r\nborder-radius: 10px;\r\nopacity:0.7;\r\n@media (max-width: 940px)\r\n       {\r\n           width : 360px;\r\n       }\r\n\r\n`;\r\n\r\nconst OpenModalTitle = styled.div`\r\nmargin-bottom:10px;\r\n`;\r\n\r\nconst OpenModalContent = styled.div`\r\n\r\n\r\n\r\n`;\r\n\r\nconst NewNoteIcons = styled.div`\r\ndisplay:flex;\r\nbackground:#202124;\r\nalign-items: center;\r\n\r\n\r\n.menu{\r\n// border:1px solid black;\r\npadding:5px;\r\nborder-radius:50%;\r\n}\r\n.menu:hover{\r\ncursor:pointer;\r\nbackground:#2F3034;\r\n}\r\n.menu:active{\r\n    opacity:0.7;\r\n}\r\n`;\r\n\r\nconst NewNoteIconsLeft = styled.div`\r\nflex:0.6;\r\ndisplay:flex;\r\njustify-content: space-around;\r\nalign-items: center;\r\n// border: 1px solid black;\r\npadding :5px\r\n\r\n`;\r\n\r\nconst NewNoteIconsRight = styled.div`\r\nflex:0.4;\r\n\r\ndisplay:flex;\r\njustify-content:center;\r\n// border: 1px solid black;\r\npadding : 5px;\r\n`;\r\n\r\n\r\nconst InputField = styled.textarea`\r\n    width: 95%;\r\n    font-size: 15px;\r\n    background : #202124;\r\n    color : white;\r\n    border: none;\r\n    overflow-wrap: break-word;\r\n    resize: none;\r\n    padding-left : 10px;\r\n    &::placeholder {\r\n        color:white;\r\n        font-size: 15px;\r\n        opacity:0.7;s\r\n      }\r\n    &:focus{\r\n        outline:none;\r\n    }\r\n    &.title{\r\n    \r\n    }\r\n    &.content{\r\n\r\n    }\r\n  `;  \r\n\r\nconst ModalCloseButton = styled.a`\r\nfont-weight: 400;\r\npadding:5px 15px 5px 15px;\r\n// border:1px solid black;\r\nbackground: #202124;\r\nborder-radius : 5px;\r\ncursor:pointer;\r\nuser-select: none;\r\n\r\n&:hover{\r\n    background:#2F3034;\r\n    opacity : 0.7;\r\n}\r\n&:active{\r\n    opacity : 1;\r\n}\r\n`;\r\n\r\n","import React from 'react'\r\nimport styled  from \"styled-components\";\r\nimport WbIncandescentRoundedIcon from '@material-ui/icons/WbIncandescentRounded';\r\n\r\n\r\nexport default  function BlankPage({message}) {\r\n    return (\r\n        <BlankWrapper>\r\n            <BlankIcon>\r\n                <WbIncandescentRoundedIcon fontSize=\"large\" htmlColor=\"white\"/>\r\n            </BlankIcon>\r\n            <BlankText>\r\n                <TextField>{message}</TextField>\r\n            </BlankText>\r\n        </BlankWrapper>\r\n    )\r\n}\r\n\r\nconst BlankWrapper = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\nalign-items: center;\r\nmargin-top: 20vh;\r\n`;\r\nconst BlankIcon = styled.div`\r\n\r\n`;\r\nconst BlankText = styled.div`\r\n\r\n`;\r\n\r\nconst TextField = styled.p`\r\n    color: #9aa0a6;\r\n    cursor: default;\r\n    font-family: 'Google Sans',Roboto,Arial,sans-serif;\r\n    font-size: 1.375rem;\r\n    font-weight: 400;\r\n    letter-spacing: 0;\r\n    line-height: 1.75rem;\r\n`;\r\n\r\n","import React,{useContext,useState} from 'react'\r\nimport styled  from \"styled-components\";\r\nimport CreateNewNote from \"./CreateNewNote\"\r\nimport DisplayNote from './DisplayNote'\r\nimport {NotesContext} from '../../Context/Notes'\r\nimport OpenCreateNewNote from './OpenCreateNewNote'\r\nimport BlankPage from '../BlankPage/BlankPage'\r\nimport WbIncandescentRoundedIcon from '@material-ui/icons/WbIncandescentRounded';\r\nimport {DisplayListContext} from '../../Context/DisplayList'\r\n\r\nexport default  function Notebody() {\r\n\r\n    const [notes,setNotes] = useContext(NotesContext);\r\n   const [togglenote,setToogleNote] = useState(false);\r\n   const [displaylist,setDisplayList] =  useContext(DisplayListContext);\r\n\r\n \r\n\r\n    return (\r\n        <NoteWrapper>\r\n           <NoteCreateWrapper>\r\n               {!togglenote?\r\n                <CreateNewNote setToogleNote={setToogleNote}/>\r\n                :\r\n                <OpenCreateNewNote  setToogleNote={setToogleNote}/>\r\n               }\r\n           </NoteCreateWrapper>\r\n           {notes.length != 0?\r\n           <NoteDisplayWrapper displaylist={displaylist}>\r\n               {notes.map(note => \r\n                    <DisplayNote key={note.id} id={note.id} className=\"item\" title={note.title} note={note.note} />\r\n               )}\r\n           </NoteDisplayWrapper>\r\n           :\r\n           <BlankPage WbIncandescentRoundedIcon={WbIncandescentRoundedIcon} message=\"Notes you add appear here\" />\r\n           }\r\n           \r\n        </NoteWrapper>\r\n    )\r\n}\r\n\r\n\r\nconst NoteWrapper = styled.div`\r\n        display flex;\r\n        flex-direction:column;\r\n        \r\n       align-items:center;\r\n        width:100%;\r\n        \r\n       \r\n`;\r\n\r\nconst Heading = styled.p`\r\n    &.heading_h1{\r\n        font-size:25px;\r\n    }\r\n`;\r\n\r\nconst NoteCreateWrapper = styled.div`\r\npadding-top:30px;\r\npadding-bottom:30px;\r\n`;\r\nconst NoteDisplayWrapper = styled.div`\r\n// display:flex;\r\n// flex-direction:row;\r\n// flex-wrap:wrap;\r\n// justify-content:space-around;\r\nalign-items:baseline;\r\n\r\ndisplay: grid;\r\n\r\n \r\n @media (min-width: 940px)\r\n {\r\n    ${props=>props.displaylist?\"grid-template-rows: auto auto auto\":\"grid-template-columns: auto auto auto\"};\r\n ;\r\n }\r\n @media (max-width: 940px)\r\n {\r\n    grid-template-rows: auto auto auto;\r\n }\r\n\r\n`;\r\n","import React from 'react'\r\nimport styled  from \"styled-components\";\r\nimport Sidebar from './Sidebar'\r\nimport Notebody from './Notebody'\r\nexport default function Body() {\r\n    return (\r\n        <BodyWrapper>\r\n            <Sidebar />\r\n            <Notebody />\r\n        </BodyWrapper>\r\n    )\r\n}\r\n\r\nconst BodyWrapper = styled.div`\r\n        display:flex;\r\n        flex-direction:row;\r\n        background-color: #202124;\r\n        margin-top:65px;\r\n        border-top:1px solid #525355;\r\n        min-height:90vh;\r\n        \r\n`;\r\n","import styled  from \"styled-components\";\nimport './App.css';\nimport Navbar from './Components/NavBar/Navbar'\nimport Body from './Components/Body/Body'\nexport default function App() {\n  return (\n    <Apps>\n      <Navbar />\n      <Body />\n    </Apps>\n  );\n}\n\n\nconst Apps = styled.div`\n\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {SidebarToggleProvider} from './Context/SidebarToggle'\nimport {NotesProvider} from './Context/Notes'\nimport {DisplayListProvider} from './Context/DisplayList'\nReactDOM.render(\n \n  <React.StrictMode>\n    <NotesProvider>\n      <DisplayListProvider>\n      <SidebarToggleProvider>\n      <App />\n      </SidebarToggleProvider>\n      </DisplayListProvider>\n    </NotesProvider>\n  </React.StrictMode>\n  \n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}